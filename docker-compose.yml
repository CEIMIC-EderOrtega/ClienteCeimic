# docker-compose.yml (CORREGIDO - con volumen compartido y storage persistente)

services:
  # Servicio de la Aplicación (PHP-FPM + Código + Node/NPM Build)
  app:
    build:
      context: . # Directorio actual donde está el Dockerfile
      dockerfile: Dockerfile # Nombre del Dockerfile
    container_name: mi_app_laravel # Nombre amigable para el contenedor
    restart: unless-stopped
    working_dir: /var/www/html
    # Define un volumen anónimo para /var/www/html (para que Nginx acceda al código)
    # Y un volumen nombrado para storage (para que los archivos subidos persistan).
    volumes:
       - /var/www/html # <-- Volumen compartido con Nginx (el código de la imagen se copia aquí)
       - laravel_storage:/var/www/html/storage # <-- Añadido: Volumen nombrado para la carpeta 'storage'

    env_file:
      - .env # Carga variables de entorno desde el archivo .env en el mismo directorio
    networks:
      - laravel_network

  # Servicio del Servidor Web (Nginx)
  webserver:
    image: nginx:stable-alpine # Imagen oficial ligera de Nginx
    container_name: mi_app_nginx
    restart: unless-stopped
    ports:
      # Mapea el puerto 8080 del HOST (tu máquina local o Windows Server) al puerto 80 del CONTENEDOR Nginx
      # Puedes cambiar 8080 por 80 si no está ocupado en el servidor host
      - "8080:80"
    volumes:
      # Monta la configuración de Nginx que creamos en modo lectura (ro)
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      # Monta el MISMO volumen anónimo de '/var/www/html' que 'app' usa
      # Esto le da acceso a Nginx a todo el código de la app (incluida public) que está en el volumen.
      - /var/www/html:/var/www/html # <-- Volumen compartido con app (el código de la imagen)
      # Generalmente Nginx no necesita montar el volumen de storage a menos que sirva archivos directamente desde ahí.

    networks:
      - laravel_network
    depends_on:
      - app # Asegura que el contenedor 'app' se inicie antes que 'webserver'

# Red interna para que los contenedores se comuniquen por nombre de servicio
networks:
  laravel_network:
    driver: bridge

# Volúmenes nombrados (¡Descomentado para storage persistente!)
volumes: # <--- ¡Descomentada esta sección!
  laravel_storage: # <--- ¡Descomentado este volumen nombrado!
    driver: local